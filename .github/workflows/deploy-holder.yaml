name: Compilação e entrega do microsservico holder
on:
  push:
    branches: [ deploy/holder ]

jobs:
  build:
    name: Compilando e enviando para o ECR
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Configurando credenciais do AWS para envio ao Container Registry
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Login no Container Registry
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Gerando imagem para o ECR
      env:
        CONTAINER_REGISTRY: ${{ secrets.HOLDER_CONTAINER_REGISTRY }}
        CONTAINER_REGISTRY_URL: ${{ secrets.CONTAINER_REGISTRY_URL }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $CONTAINER_REGISTRY_URL/$CONTAINER_REGISTRY:$IMAGE_TAG holder
        docker tag $CONTAINER_REGISTRY_URL/$CONTAINER_REGISTRY:$IMAGE_TAG $CONTAINER_REGISTRY_URL/$CONTAINER_REGISTRY:latest
        docker push $CONTAINER_REGISTRY_URL/$CONTAINER_REGISTRY:$IMAGE_TAG
        docker push $CONTAINER_REGISTRY_URL/$CONTAINER_REGISTRY:latest

  deploy:
    name: Deploy no ECS
    runs-on: ubuntu-latest
    needs: build
    steps:

    - name: Configurando credenciais do AWS para deploy no ECS
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Obtendo o ARN da ultima task definition
      run: |
        LATEST=$(aws ecs list-task-definitions \
          --family-prefix holder-task-definition \
          --status ACTIVE \
          --sort DESC \
          --max-items 1 \
          --query 'taskDefinitionArns[0]' \
          --output json | tr -d '"')
        echo "TASK_DEFINITION=$LATEST" >> $GITHUB_ENV

    - name: Baixando task definition
      env:
        TASK_DEFINITION: ${{ env.TASK_DEFINITION }}
      run: |
        aws ecs describe-task-definition \
          --task-definition $TASK_DEFINITION \
          --query taskDefinition > task-definition.json

    - name: Trocando o ID da imagem para a nova na task definition
      id: task-definition
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: holder-container
        image: ${{ secrets.CONTAINER_REGISTRY_URL }}/${{ secrets.HOLDER_CONTAINER_REGISTRY }}:latest

    - name: Realizando deploy
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-definition.outputs.task-definition }}
        service: holder-service
        cluster: digital-account-cluster
        wait-for-service-stability: true
